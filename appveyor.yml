version: '{build}'

skip_commits:
  files:
    - '**/*.md'

image: Visual Studio 2019

init:
  - cmd: git config --global core.autocrlf false
  - ps: |
      $ErrorActionPreference = "Stop"
      $tagName = $env:APPVEYOR_REPO_TAG_NAME
      $env:PROJECT_PATH = "TypeScript.ContractGenerator"
      $env:ALLOW_PRERELEASE = "--allowPrereleasePackages"
      if ($tagName -match '^v\d+\.\d+') # tag name starts with 'vX.Y'
      {
        if ($tagName -match '^v\d+\.\d+-roslyn') # tag name starts with 'vX.Y-roslyn'
        {
          $env:PROJECT_PATH = "TypeScript.ContractGenerator.Roslyn"
        }
        if ($tagName -match '^v\d+\.\d+-cli') # tag name starts with 'vX.Y-cli'
        {
          $env:PROJECT_PATH = "TypeScript.ContractGenerator.Cli"
        }

        $env:SHOULD_PUBLISH_NUGET_PACKAGE = "true"
        Write-Host "Will publish nuget package $env:PROJECT_PATH for $tagName tag" -ForegroundColor "Green"
        if ($tagName -match '^v\d+\.\d+(|-roslyn|-cli)-release') # tag name starts with 'vX.Y-release' (e.g. use 'v4.2-release.1' tag for the first patch for release v4.2)
        {
          $env:SHOULD_CREATE_RELEASE = "true"
          $env:ALLOW_PRERELEASE = ""
          Write-Host "Will create release for $tagName tag" -ForegroundColor "Green"
        }
      }

nuget:
  disable_publish_on_pr: true

before_build:
  - cmd: dotnet --info
  - cmd: dotnet restore ./TypeScript.ContractGenerator.sln --verbosity minimal

build_script:
  - cmd: dotnet build --configuration Release ./TypeScript.ContractGenerator.sln
  - cmd: dotnet pack --no-build --configuration Release ./TypeScript.ContractGenerator.sln

test_script:
  - cmd: dotnet test --no-build --configuration Release ./TypeScript.ContractGenerator.Tests/TypeScript.ContractGenerator.Tests.csproj

# after_test:
#   - ps: |
#       if ($env:SHOULD_PUBLISH_NUGET_PACKAGE -eq "true")
#       {
#         Write-Host "Will fix refs and rebuild solution" -ForegroundColor "Green"
#         dotnet ./ProjectRefsFixer/bin/Release/netcoreapp3.1/ProjectRefsFixer.dll $env:ALLOW_PRERELEASE --project:$env:PROJECT_PATH
#         Remove-Item **/bin/* -recurse
#         Remove-Item **/obj/* -recurse
#         dotnet build --configuration Release ./TypeScript.ContractGenerator.sln
#         dotnet pack --no-build --configuration Release ./TypeScript.ContractGenerator.sln
#       }

artifacts:
  # - path: './$(PROJECT_PATH)/bin/Release/*.nupkg'
  - path: '**/*.nupkg'

deploy:
  - provider: NuGet
    server: https://nuget.org
    api_key:
      secure: CQ4MGAZ56ySfApnQ2TeZhSYDs+yLTggiu+5EWVsJBF9xn/pKcOO9IelQM6qA0mbf
    skip_symbols: true
    on:
      SHOULD_PUBLISH_NUGET_PACKAGE: true

  - provider: GitHub
    tag: $(APPVEYOR_REPO_TAG_NAME)
    auth_token:
      secure: y8dDOcAtq4U1MTDJFX8f23xsvyFU1u4bhwr9Lzbkf2revNWPPTifBkWghris9v8i
    draft: false
    prerelease: false
    on:
      SHOULD_CREATE_RELEASE: true
